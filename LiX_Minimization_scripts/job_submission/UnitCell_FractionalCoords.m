function [FC_Metal_Out,FC_Halide_Out] = UnitCell_FractionalCoords(FC_Metal,FC_Halide,Structure)

switch lower(Structure)
    case 'betabeo'
        FC_Metal  = [FC_Metal; ...
            -FC_Metal(1) -FC_Metal(2) FC_Metal(3); ...
            (1/2)-FC_Metal(2) (1/2)+FC_Metal(1) (1/2)+FC_Metal(3); ...
            (1/2)+FC_Metal(2) (1/2)-FC_Metal(1) (1/2)-FC_Metal(3)];
        FC_Halide  = [FC_Halide; ...
            -FC_Halide(1) -FC_Halide(2) FC_Halide(3); ...
            (1/2)-FC_Halide(2) (1/2)+FC_Halide(1) (1/2)+FC_Halide(3); ...
            (1/2)+FC_Halide(2) (1/2)-FC_Halide(1) (1/2)-FC_Halide(3)];
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case 'cscl'
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case 'fivefive'
        FC_Metal  = [FC_Metal; ...
            (1/2)-FC_Metal(1) (1/2)+FC_Metal(2) (1/2)+FC_Metal(3); ...
            (1/2)+FC_Metal(1) (1/2)-FC_Metal(2) (1/2)+FC_Metal(3); ...
            -FC_Metal(1) -FC_Metal(2) -FC_Metal(3)];
        FC_Halide  = [FC_Halide; ...
            (1/2)-FC_Halide(1) (1/2)+FC_Halide(2) (1/2)+FC_Halide(3); ...
            (1/2)+FC_Halide(1) (1/2)-FC_Halide(2) (1/2)+FC_Halide(3); ...
            -FC_Halide(1) -FC_Halide(2) -FC_Halide(3)];
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case {'nias' 'antinias'}
        FC_Metal  = [FC_Metal; ...
            -FC_Metal(1) -FC_Metal(2) FC_Metal(3)+(1/2)];
        FC_Halide  = [FC_Halide; ...
            -FC_Halide(1) -FC_Halide(2) FC_Halide(3)+(1/2)];
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case 'rocksalt'
        FC_Metal  = [FC_Metal; ...
            FC_Metal(1)+(1/2) FC_Metal(2)+(1/2) FC_Metal(3);...
            FC_Metal(1) FC_Metal(2)+(1/2) FC_Metal(3)+(1/2);...
            FC_Metal(1)+(1/2) FC_Metal(2) FC_Metal(3)+(1/2)];
        FC_Halide  = [FC_Halide; ...
            FC_Halide(1)+(1/2) FC_Halide(2)+(1/2) FC_Halide(3);...
            FC_Halide(1) FC_Halide(2)+(1/2) FC_Halide(3)+(1/2);...
            FC_Halide(1)+(1/2) FC_Halide(2) FC_Halide(3)+(1/2)];
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case 'sphalerite'
        FC_Metal  = [FC_Metal; ...
            FC_Metal(1)+(1/2) FC_Metal(2)+(1/2) FC_Metal(3);...
            FC_Metal(1) FC_Metal(2)+(1/2) FC_Metal(3)+(1/2);...
            FC_Metal(1)+(1/2) FC_Metal(2) FC_Metal(3)+(1/2)];
        FC_Halide = [FC_Halide; ...
            FC_Halide(1)+(1/2) FC_Halide(2)+(1/2) FC_Halide(3);...
            FC_Halide(1) FC_Halide(2)+(1/2) FC_Halide(3)+(1/2);...
            FC_Halide(1)+(1/2) FC_Halide(2) FC_Halide(3)+(1/2)];
        % Put coordinates into local unit cell
        FC_Metal  = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);

    case 'wurtzite'
        FC_Metal  = [FC_Metal; ...
            FC_Metal(2) FC_Metal(1) FC_Metal(3)+(1/2)];
        FC_Halide = [FC_Halide; ...
            FC_Halide(2) FC_Halide(1) FC_Halide(3)+(1/2)];
        % Put coordinates into local unit cell
        FC_Metal = arrayfun(@(a) mod(a,1),FC_Metal);
        FC_Halide = arrayfun(@(a) mod(a,1),FC_Halide);
    otherwise
        error(['Unknown Structure: ' Structure]);
end

FC_Metal_Out = FC_Metal;
FC_Halide_Out = FC_Halide;

end
